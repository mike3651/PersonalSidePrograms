import java.io.File;
import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.HashSet;

/**
 * The purpose of this class is to utilize the CompareRator objects functionality
 * 
 * @author MWilson164
 * @version 1.0.0
 */
public class CompareClient {
	
	/**
	 * Kicks off the whole program
	 * 
	 * @param args Any arguments that are passed in via the command line
	 * @throws FileNotFoundException
	 * @throws InterruptedException 
	 * @throws UnsupportedEncodingException 
	 */
	public static void main(final String[] args) throws FileNotFoundException, InterruptedException, UnsupportedEncodingException {
		// TEST THE SEGMENT FILES
		CompareRator compareFiles = new CompareRator(new File("./src/files/EAI_VT_SEGMENTS.txt"), 
				new File("./src/files/Granite_VT_SEGMENTS.txt"), 
				"EAI_GRANITE_SEGMENTS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_INST_ID", "CIRC_PATH_INST_ID", "NEXT_CIRC_PATH_INST_ID", "COMMENTS", "A_SIDE_SITE_INST_ID", 
						"A_SIDE_CARD_INST_ID", "A_SIDE_PORT_INST_ID", "Z_SIDE_SITE_INST_ID", "A_SIDE_EQ_INST_ID",
						"Z_SIDE_PORT_INST_ID", "Z_SIDE_CARD_INST_ID", "LAST_MOD_BY", "LAST_MOD_TS", "LOAD_TIMESTAMP")));
		compareFiles.startComparison();
		
		// TEST RELPATH
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TP_RELPATH_ELEMENTS.txt"), 
				new File("./src/files/GRANITE_VT_TP_RELPATH_ELEMENTS.txt"), 
				"EAI_GRANITE_VT_TP_RELPATH_ELEMENTS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_PATH_INST_ID","RELATED_PATH_INST_ID","SEQUENCE")));
		compareFiles.startComparison();
		
		// ANALYZE GRANITE2NDW_DDS
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_GRANITE2NDW_DDS.txt"), 
				new File("./src/files/GRANITE_VT_GRANITE2NDW_DDS.txt"), 
				"EAI_GRANITE_VT_GRANITE2NDW_DDS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList()));
		compareFiles.startComparison();
		
		// ANALYZE PATH
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TP_PATH_ELEMENTS.txt"), 
				new File("./src/files/GRANITE_VT_TP_PATH_ELEMENTS.txt"), 
				"EAI_GRANITE_VT_TP_PATH_ELEMENTS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_PATH_INST_ID","SEQUENCE")));
		compareFiles.startComparison();
		
		// ANALYZE TRANSPORT DATA
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TRANSPORT_DATA.txt"), 
				new File("./src/files/GRANITE_VT_TRANSPORT_DATA.txt"), 
				"EAI_GRANITE_VT_TRANSPORT_DATA_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList()));
		compareFiles.startComparison();
	
		// ANALYZE SUPERPATH
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TP_SUPER_PATH_ELEMS.txt"), 
				new File("./src/files/GRANITE_VT_TP_SUPER_PATH_ELEMS.txt"), 
				"EAI_VT_TP_SUPER_PATH_ELEMS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_PATH_INST_ID","PATH_INST_ID")));
		compareFiles.startComparison();
		
		// ANALYZE GRANITE2INSITE_CP
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_GRANITE2INSITE_CP.txt"), 
				new File("./src/files/GRANITE_VT_GRANITE2INSITE_CP.txt"), 
				"EAI_GRANITE_VT_GRANITE2INSITE_CP.txt",
				new HashSet<String>(Arrays.asList()));
		compareFiles.startComparison();
		
		// ANALYZE GRANITE2INSITE
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_GRANITE2INSITE.txt"), 
				new File("./src/files/GRANITE_VT_GRANITE2INSITE.txt"), 
				"EAI_GRANITE_VT_GRANITE2INSITE.txt",
				new HashSet<String>(Arrays.asList("CIRC_INST_ID,CIRC_LAST_MOD_TS",
						"A_SIDE_LAST_MOD_TS","Z_SIDE_LAST_MOD_TS")));
		compareFiles.startComparison();
		
		// ANALYZE SUPERPATH
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TP_SUPER_PATH_ELEMS.txt"), 
				new File("./src/files/EAI_VT_TP_SUPER_PATH_ELEMS.txt"), 
				"EAI_VT_TP_SUPER_PATH_ELEMS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_PATH_INST_ID","PATH_INST_ID")));
		compareFiles.startComparison();
		
		// ANALYZE SUPERPATH
		compareFiles = new CompareRator(new File("./src/files/EAI_VT_TP_SUPER_PATH_ELEMS.txt"), 
				new File("./src/files/EAI_VT_TP_SUPER_PATH_ELEMS.txt"), 
				"EAI_VT_TP_SUPER_PATH_ELEMS_ANALYSIS.txt",
				new HashSet<String>(Arrays.asList("CIRC_PATH_INST_ID","PATH_INST_ID")));
		compareFiles.startComparison();
		
	}
}
