import java.util.LinkedList;

/**
 * The purpose of this class is to tackle various linked list problems
 * 
 * @author MWilson164
 * @version 1.0.0
 */
public class LinkedListDriver {
	/** Keeps track of the maximum size of the list. */
	private static final int MAX_CAPACITY = 20;
	
	public static void main(final String[] args) {
		oneInAnother();
	}
	
	/**
	 * This problem deals with the case in which we try to see if one linkedlist 
	 * exists inside of another one.
	 */
	private static void oneInAnother() {
		LinkedList<Integer> a = makeRandomList();
		LinkedList<Integer> b = makeRandomList();
	}
	
	/**
	 * Private helper method that will generate a random list and return it
	 */
	private static LinkedList<Integer> makeRandomList() {
		Random rand = new Random();
		LinkedList<Integer> returnList = new LinkedList<Integer>();
		for(int i = 0; i < MAX_CAPACITY; i++) {
			returnList.add(rand.nextInt(MAX_CAPACITY));
		}
		return returnList;
	}
}
